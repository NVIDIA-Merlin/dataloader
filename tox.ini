; For all tests that run in Github Actions, see
; .github/workflows/cpu-ci.yml for the workflow definition.

[tox]
envlist = python3.8,test-gpu,test-cpu

[testenv]
commands =
    pip install --upgrade pip
    pip install .

[testenv:test-cpu]
; Runs in: Github Actions
; Runs all CPU-based tests.
deps = 
    -rrequirements/base.txt
    -rrequirements/dev.txt
commands = 
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/core.git@{posargs:main}
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/nvtabular.git@{posargs:main}
    python -m pip install -e .[all]
    python -m pip install fsspec==2022.5.0
    python -m pytest --cov-report term --cov=merlin -rxs tests/unit tests/examples

[testenv:test-tensorflow]
; Runs in: Github Actions
; Runs all Tensorflow-based tests.
deps =
    -rrequirements/base.txt
    -rrequirements/dev.txt
commands =
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/core.git@{posargs:main}
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/nvtabular.git@{posargs:main}
    python -m pip install -e .[tensorflow]
    python -m pip install fsspec==2022.5.0
    python -m pytest -rxs -m tensorflow tests/unit tests/examples

[testenv:test-torch]
; Runs in: Github Actions
; Runs all Tensorflow-based tests.
deps =
    -rrequirements/base.txt
    -rrequirements/dev.txt
commands =
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/core.git@{posargs:main}
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/nvtabular.git@{posargs:main}
    python -m pip install -e .[torch]
    python -m pip install fsspec==2022.5.0
    python -m pytest -rxs -m torch tests/unit tests/examples

[testenv:test-jax]
; Runs in: Github Actions
; Runs all Tensorflow-based tests.
deps =
    -rrequirements/base.txt
    -rrequirements/dev.txt
commands =
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/core.git@{posargs:main}
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/nvtabular.git@{posargs:main}
    python -m pip install -e .[jax]
    python -m pip install fsspec==2022.5.0
    python -m pytest -rxs -m jax tests/unit tests/examples

[testenv:test-gpu]
passenv =
    NR_USER
    CUDA_VISIBLE_DEVICES
sitepackages=true
; Runs in: 1GPU Github Actions runners.
; Runs GPU-based tests.
deps =
    -rrequirements/dev.txt
    pytest
    pytest-cov
commands =
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/core.git
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/nvtabular.git

    python -m pytest -m "singlegpu or not multigpu" --cov-report term --cov merlin -rxs tests/unit/ tests/examples/

[testenv:test-gpu-multigpu]
passenv =
    CUDA_VISIBLE_DEVICES
    OPAL_PREFIX
    NR_USER
sitepackages=true
; Runs in: 1GPU Github Actions runners.
; Runs GPU-based tests.
deps =
    -rrequirements/dev.txt
    pytest
    pytest-cov
commands =
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/core.git
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/nvtabular.git

    python -m pytest -m "multigpu" --cov-report term --cov merlin -rxs tests/unit/ tests/examples/

[testenv:test-models-cpu]
passenv=GIT_COMMIT
allowlist_externals = git
commands =
    ; the GIT_COMMIT env is the current commit of the dataloader repo
    git clone --depth 1 --branch {posargs:main} https://github.com/NVIDIA-Merlin/models.git models-{env:GIT_COMMIT}
    python -m pip install --upgrade "./models-{env:GIT_COMMIT}"
    python -m pip install --upgrade -r "./models-{env:GIT_COMMIT}/requirements/test.txt"
    python -m pip install --no-deps git+https://github.com/NVIDIA-Merlin/core.git@{posargs:main}
    python -m pip install --no-deps git+https://github.com/NVIDIA-Merlin/NVTabular.git@{posargs:main}
    python -m pip install --no-deps .
    python -m pytest models-{env:GIT_COMMIT}/tests/unit

[testenv:test-nvtabular-cpu]
passenv=GIT_COMMIT
allowlist_externals = git
commands =
    ; the GIT_COMMIT env is the current commit of the dataloader repo
    git clone --depth 1 --branch {posargs:main} https://github.com/NVIDIA-Merlin/NVTabular.git nvtabular-{env:GIT_COMMIT}
    python -m pip install --upgrade "./nvtabular-{env:GIT_COMMIT}"
    python -m pip install --upgrade -r "./nvtabular-{env:GIT_COMMIT}/requirements/test.txt"
    python -m pip install --no-deps git+https://github.com/NVIDIA-Merlin/core.git@{posargs:main}
    python -m pip install --no-deps git+https://github.com/NVIDIA-Merlin/models.git@{posargs:main}
    python -m pip install --no-deps .
    python -m pytest nvtabular-{env:GIT_COMMIT}/tests/unit

[testenv:test-systems-cpu]
passenv=GIT_COMMIT
allowlist_externals = git
commands =
    ; the GIT_COMMIT env is the current commit of the dataloader repo
    git clone --depth 1 --branch {posargs:main} https://github.com/NVIDIA-Merlin/systems.git systems-{env:GIT_COMMIT}
    python -m pip install --upgrade "./systems-{env:GIT_COMMIT}"
    python -m pip install --upgrade -r "./systems-{env:GIT_COMMIT}/requirements/test-cpu.txt"
    python -m pip install --no-deps git+https://github.com/NVIDIA-Merlin/core.git@{posargs:main}
    python -m pip install --no-deps git+https://github.com/NVIDIA-Merlin/NVTabular.git@{posargs:main}
    python -m pip install --no-deps git+https://github.com/NVIDIA-Merlin/models.git@{posargs:main}
    python -m pip install --no-deps .
    python -m pytest -m "not notebook" systems-{env:GIT_COMMIT}/tests/unit

[testenv:test-transformers4rec-cpu]
passenv=GIT_COMMIT
allowlist_externals = git
commands =
    ; the GIT_COMMIT env is the current commit of the dataloader repo
    git clone --depth 1 --branch {posargs:main} https://github.com/NVIDIA-Merlin/Transformers4Rec.git t4r-{env:GIT_COMMIT}
    python -m pip install --upgrade "./t4r-{env:GIT_COMMIT}"
    python -m pip install --upgrade -r "./t4r-{env:GIT_COMMIT}/requirements/test.txt"
    python -m pip install --no-deps git+https://github.com/NVIDIA-Merlin/core.git@{posargs:main}
    python -m pip install --no-deps git+https://github.com/NVIDIA-Merlin/NVTabular.git@{posargs:main}
    python -m pip install --no-deps git+https://github.com/NVIDIA-Merlin/models.git@{posargs:main}
    python -m pip install --no-deps .
    python -m pytest t4r-{env:GIT_COMMIT}/tests/unit

[testenv:docs]
; Runs in: Github Actions
; Generates documentation with sphinx. There are other steps in the Github Actions workflow
; to publish the documentation on release.
changedir = {toxinidir}
deps = -rrequirements/docs.txt
commands =
    python -m sphinx.cmd.build -P -b html docs/source docs/build/html

[testenv:docs-multi]
; Run the multi-version build that is shown on GitHub Pages.
changedir = {toxinidir}
deps = -rrequirements-docs.txt
commands =
    sphinx-multiversion --dump-metadata docs/source docs/build/html | jq "keys"
    sphinx-multiversion docs/source docs/build/html

